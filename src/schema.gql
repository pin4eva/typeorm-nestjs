# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  email: String!
  id: String!
  profile: Profile!
}

input ChangeAuthPasswordInput {
  id: ID!
  oldPassword: String!
  password: String!
}

type ClassRoom {
  id: String!
  name: String!
  session: Session
  students: [Student!]
  teacher: Profile
}

input CreateClassInput {
  name: String!
  session: String!
  teacher: String!
}

input CreateFamilyInput {
  familyName: String!
}

input CreateFamilyMemberInput {
  family: ID!
  profile: ID!
  role: String!
}

input CreateProfileInput {
  accountType: String!
  address: String
  class: String
  dob: String
  email: String
  familyCode: String
  familyRole: String
  firstName: String!
  gender: String!
  image: String
  lastName: String!
  lga: String!
  middleName: String!
  otherName: String
  phone: String
  state: String!
}

input CreateSessionInput {
  name: String!
  year: Int!
}

type Family {
  familyCode: String!
  familyName: String!
  id: String!
  members: [FamilyMember!]!
}

type FamilyMember {
  family: Family!
  id: String!
  profile: Profile!
  role: String!
}

input ForgotPasswordInput {
  emailToken: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  id: String!
  token: String!
}

type Mutation {
  changeAuthPassword(input: ChangeAuthPasswordInput!): Boolean!
  clearFamily: Boolean!
  createClass(input: CreateClassInput!): ClassRoom!
  createFamily(input: CreateFamilyInput!): Family!
  createFamilyMember(input: CreateFamilyMemberInput!): FamilyMember!
  createProfile(input: CreateProfileInput!): Profile!
  createSession(input: CreateSessionInput!): Session!
  deleteAllProfile: [Profile!]!
  deleteAuth(id: String!): Auth!
  deleteClass(id: String!): ClassRoom!
  deleteFamily(id: String!): Family!
  deleteFamilyMember(id: String!): FamilyMember!
  deleteProfile(id: String!): Profile!
  deleteSession(id: String!): Session!
  deleteStudent(id: String!): Student!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  login(input: LoginInput!): LoginResponse!
  resetPassword(email: String!): Boolean!
  setCurrentSession(id: String!): Boolean!
  signup(input: SignupInput!): Auth!
  updateClass(input: UpdateClassInput!): ClassRoom!
  updateFamily(input: UpdateFamilyInput!): Family!
  updateFamilyMember(input: UpdateFamilyMemberInput!): FamilyMember!
  updateProfile(input: UpdateProfileInput!): Profile!
  updateSession(input: UpdateSessionInput!): Session!
}

type Profile {
  accountType: String!
  accountTypes: [String!]
  address: String
  classes: [ClassRoom!]!
  dob: Timestamp
  email: String
  family: Family
  firstName: String!
  gender: String!
  id: String!
  image: String
  isActive: Boolean!
  isEmailVerified: Boolean!
  isPhoneVerified: Boolean!
  lastName: String!
  lastSeen: Timestamp!
  lga: String
  middleName: String!
  name: String!
  occupation: String
  otherName: String
  phone: String
  role: String
  state: String
  student: Student
}

type Query {
  getAuths: [Auth!]
  getClass(id: String!): ClassRoom!
  getClasses: [ClassRoom!]!
  getClassesBySession(session: String!): [ClassRoom!]!
  getFamilies: [Family!]!
  getFamily(id: String!): Family!
  getFamilyByFamilyCode(familyCode: String!): Family!
  getFamilyMembers: [FamilyMember!]!
  getProfile(id: String!): Profile!
  getProfiles: [Profile!]!
  getSession(id: String!): Session!
  getSessions: [Session!]!
  getStudent(id: String!): Student!
  getStudentByRegNo(regNo: String!): Student!
  getStudents: [Student!]!
  getStudentsByClass(classId: String!): [Student!]!
  getStudentsBySession(session: String!): [Student!]!
  me: Profile!
  searchProfilesByName(name: String!): [Profile!]!
  sendInvit(id: String!): Boolean!
}

type Session {
  classes: [ClassRoom!]!
  id: String!
  isCurrent: Boolean!
  name: String!
  year: Int!
}

input SignupInput {
  password: String!
  profileId: String!
}

type Student {
  class: ClassRoom!
  id: ID!
  profile: Profile
  regNo: String!
  status: String
  subjects: [String!]!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateClassInput {
  id: ID!
  name: String!
}

input UpdateFamilyInput {
  familyName: String!
  id: String!
}

input UpdateFamilyMemberInput {
  id: ID!
  role: String!
}

input UpdateProfileInput {
  accountType: String
  address: String
  class: String
  dob: String
  email: String
  familyCode: String
  familyRole: String
  firstName: String
  gender: String
  id: String!
  image: String
  lastName: String
  lga: String
  middleName: String
  otherName: String
  phone: String
  state: String
}

input UpdateSessionInput {
  id: ID!
  name: String!
  year: Int!
}